1.如何从大量的 URL 中找出相同的 URL？
    1.分而治之，进行哈希取余将大文件分成小文件
    2.对每个子文件进行 HashSet 统计。

2.如何从大量数据中找出高频词？
    1.分而治之，进行哈希取余；
    2.使用 HashMap 统计频数；
    3.求解最大的 TopN 个，用小顶堆；求解最小的 TopN 个，用大顶堆。

3.给定 40 亿个不重复的没排过序的 unsigned int 型整数，然后再给定一个数，如何快速判断这个数是否在这 40 亿个整数当中？
    1.分治法
    2.位图法

4.如何查询最热门的查询串？
    1.分治法
    2.hashMap法
    3.前缀树法

5.如何从 5 亿个数中找出中位数？
    分治法的思想是把一个大的问题逐渐转换为规模较小的问题来求解。
    对于这道题，顺序读取这 5 亿个数字，对于读取到的数字 num，如果它对应的二进制中最高位为 1，则把这个数字写到 f1 中，否则写入 f0 中。
    通过这一步，可以把这 5 亿个数划分为两部分，而且 f0 中的数都大于 f1 中的数（最高位是符号位）。
    划分之后，可以非常容易地知道中位数是在 f0 还是 f1 中。
    假设 f1 中有 1 亿个数，那么中位数一定在 f0 中，且是在 f0 中，从小到大排列的第 1.5 亿个数与它后面的一个数的平均值。
    对于 f0 可以用次高位的二进制继续将文件一分为二，如此划分下去，直到划分后的文件可以被加载到内存中，把数据加载到内存中以后直接排序，找出中位数。

